1-What are some steps you take to update your redhat/centos server?

2- Why is it important to install/compile a new kernel instead of replacing the old one?

3- why is it a good practice to reboot the server before and after updating the kernel or the os?

4- what would you do if the new installed kernel is not working properly.

5- where do you go to configure the new kernel as default?

6- What is selinux ? what is the selinux config file?

7-Using the awk command print the encryption of the last account in the /etc/shadow

8-Go ahead and do a backup of the /etc/passwd file, and in the backup replace the name of the last acccount by your name using the sed command.

9-A client complains that his/her computer reboot continously. Go ahead and troubleshoot.

10- A client also complain that when booting up his/her linux server, the following message is displayed on the screen :"No bootable medium found". -which stage of the boot up process is that? -What can be the problem?

11-How do you check if your Nic card is working properly on your linux server?

12-Print the number of words in the grub.conf file and the number of lines in the inittab file.

13-what is the command that can give us access to the bash after protecting the maintenance mode?

14- What will d+$ do in the vi editor?

15- What will the command Ctrl+s do in the bash environment?

16-What is the name of the directory that carries the hardware's information on our linux server?

17- Create your own branch and push back your job in Bitbucket.

************************************************************************************

---
# Script needs an inventory file when run against real servers.
# For local testing with vagrant use hosts: all
# for silent kernel compile a kernel config file similar to the server this run against is required
# playbook expect kernel.config file to be in the same folder as playbook upgrade.yml
# kernel.config can be generated by copying .config file for kernel 4.4.23 form an identical server 
# ansible-playbook upgrade.yml -i inventory.yml -u root -k

#- hosts: centos-servers
- hosts: all
  vars:
    kernel_ver: 4.4.23
  remote_user: root
  become: yes
  become_method: sudo
  tasks:
  - name: install development tools package group
    yum: name="@Development tools" state=present update_cache=yes

  - name: install kernel dev packages
    yum: name={{ item }} state=present
    with_items: 
    - ncurses-devel
    - bc
    - openssl-devel
    - hmaccalc
    - zlib-devel
    - binutils-devel
    - elfutils-libelf-devel

  - name: download kernel
    get_url:
      url: https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.4.23.tar.xz
      dest: /tmp/linux-{{ kernel_ver }}.tar.xz

  - name: untar kernel
    shell: tar -Jxvf linux-{{ kernel_ver }}.tar.xz
    args:
      chdir: /tmp/

  - name: copy kernel config file for make
    copy: src=./kernel.config dest=/tmp/linux-{{ kernel_ver }}/.config

  - name: install kernel
    shell: "{{ item }}"
    with_items:
    - make silentoldconfig .config
    - make 
    - make modules
    - make modules_install
    - make install
    args:
      chdir: /tmp/linux-{{ kernel_ver }}/

  - name: restart machine
    shell: sleep 2 && shutdown -r +1 "Ansible updates triggered"
    async: 1
    poll: 0
    sudo: true
    ignore_errors: true

  - name: waiting for server to come back
    local_action: wait_for host={{ inventory_hostname }} state=started delay=30 timeout=300
    sudo: false

  - name: rerun make install to correct grub entry order
    shell: make install 
    args:
      chdir: /tmp/linux-{{ kernel_ver }}/

  - name: restart machine
    shell: sleep 2 && shutdown -r +1 "Ansible updates triggered"
    async: 1
    poll: 0
    sudo: true
    ignore_errors: true

  - name: waiting for server to come back
    local_action: wait_for host={{ inventory_hostname }} state=started delay=30 timeout=300
    sudo: false
 
  - name: confirm kernel version
    shell: uname -a
    register: kernel_version

  - debug: var=kernel_version.stdout

**************************************************************************

